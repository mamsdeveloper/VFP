#: import platform kivy.utils.platform
#
# Screens
#
<AppScreenManager>:
    canvas.before:
        Rectangle:
            source: "background.png"
            pos: self.pos
            size: self.size


#@@@@@@@
<ScreenBox@MDGridLayout>:
    cols: 1
    padding: [sp(8), sp(15)]
    spacing: sp(15)
    

#@@@@@@@
<ParentScreen>:
    radius: [25, 0, 0, 0]
    md_bg_color: 0, 0, 0, 0

    
#
# Areas
#
<ParentArea>:
    cols: 1
    height: self.minimum_height
    size_hint_y: None
    padding: [sp(10), sp(15)]
    spacing: sp(12)


#@@@@@@@
<AreaScroll@ScrollView>:
    bar_width: 0
    do_scroll_x: False
    canvas.before:
        Color:
            rgba: (1, 1, 1, .6)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(10)]


#@@@@@@@
<MainArea>:
    size_hint: 1, 1
    # AAAAAAAAAAAAAAAAA Amazing feature
    ScatterLayout:
        Image:
            source: "logo.png"


#@@@@@@@
<SettingsArea>:
    SimpleLabel:
        text: "Название организации:"
        
    SimpleTextInput:
        hint_text: "Название организации"
        
    SimpleLabel:
        text: "Преподаватель:"

    MDGridLayout:
        cols: 1
        spacing: sp(12)
        adaptive_height: True
        canvas.before:
            Color:
                rgba: 0, 0, 0, .15
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [sp(8)]
        
        SimpleTextInput:
            hint_text: "ФИО"

        SimpleTextInput:
            hint_text: "Звание"

        SimpleTextInput:
            hint_text: "Должность"
    
    SimpleLabel:
        text: "Курсы:"

    ExpsList:
        name: "classes_exps"

    AnchorLayout:
        anchor_x: "center"
        size_hint_y: None
        height: sp(40)

        SubButton:
            icon: "plus-circle"
            on_release: root.parent.parent.parent.children[0].children[1].children[0].children[4].add_exp(self)

    SimpleLabel:
        text: "Упражнения:"

    ExpsList:
        name: "exercises_exps"

    AnchorLayout:
        anchor_x: "center"
        size_hint_y: None
        height: sp(40)

        SubButton:
            icon: "plus-circle"
            on_release: root.parent.parent.parent.children[0].children[1].children[0].children[1].add_exp(self)


#@@@@@@@
<ClassArea>:
    SimpleLabel:
        text: root.parent.parent.parent.title
    
    StudentsList:
    
    AnchorLayout:
        anchor_x: "center"
        size_hint_y: None
        height: sp(40)

        SubButton:
            icon: "plus-circle"
            on_release: self.parent.parent.children[1].add_student()


#@@@@@@@
<ExerciseArea>:
    SimpleLabel:
        text: root.parent.parent.parent.title
    
    SimpleLabel:
        text: "«5»"

    SimpleTextInput:
        hint_text: "Отлично"
    
    SimpleLabel:
        text: "«4»"

    SimpleTextInput:
        hint_text: "Хорошо"

    SimpleLabel:
        text: "«3»"

    SimpleTextInput:
        hint_text: "Удоволетворительно"

#@@@@@@@
<FileSettingsArea>:
    SimpleLabel:
        text: "Период сдачи:"
        
    SimpleTextInput:
        hint_text: "Период сдачи:"

    SimpleLabel:
        text: "Преподаватель:"

    MDGridLayout:
        cols: 1
        spacing: sp(12)
        adaptive_height: True
        canvas.before:
            Color:
                rgba: 0, 0, 0, .15
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [sp(8)]
        
        SimpleTextInput:
            hint_text: "ФИО"

        SimpleTextInput:
            hint_text: "Звание"

        SimpleTextInput:
            hint_text: "Должность"

    SimpleLabel:
        text: "Упражнения:"
    
    MDGridLayout:
        cols: 1
        adaptive_height: True
        height: 0 
        spacing: 0

        MDGridLayout:
            name: "cb_active"
            cols: 1
            adaptive_height: True
            height: 0
            spacing: sp(10)
            padding: [sp(5), 0]

        MDGridLayout:
            name: "cb_disactive"
            cols: 1
            adaptive_height: True
            height: 0
            spacing: sp(10)
            padding: [sp(5), 0]

    SimpleLabel:
        text: "Класс:"

    DropInput:
    

#@@@@@@@
<FileSettingsShortenArea>:
    SimpleLabel:
        text: "Период сдачи:"
        
    SimpleTextInput:
        hint_text: "Период сдачи:"

    SimpleLabel:
        text: "Преподаватель:"

    MDGridLayout:
        cols: 1
        spacing: sp(12)
        adaptive_height: True
        canvas.before:
            Color:
                rgba: 0, 0, 0, .15
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [sp(8)]
        
        SimpleTextInput:
            hint_text: "ФИО"

        SimpleTextInput:
            hint_text: "Звание"

        SimpleTextInput:
            hint_text: "Должность"
  

#@@@@@@@
<FileWriteArea>:
    SimpleLabel:
        text: "Результаты класс"
    
    MDGridLayout:
        cols: 1
        adaptive_height: True
        spacing: sp(12)
#
# Area"s items
#
<SimpleLabel@MDLabel>:
    padding: [sp(5), 0]
    text_size: self.texture_size
    font_size: sp(22)
    size_hint_y: None
    height: self.texture_size[1]
    shorten: True


#@@@@@@@
<TunedTextInput>:
    line_height: self.height
    multiline: False    
    pos: self.parent.pos
    padding: [sp(8), self.height//4-self.font_size//8]
    size_hint: 0.95, 1
    color: (0, 0, 0, 1)
    text_size: self.size
    font_size: sp(20)
    background_normal: ""
    background_active: ""
    background_color: (0, 0, 0, 0)
    cursor_color: (.4, .4, .4, 1)
    cursor_width: 2
    on_focus: self.adopt_scroll()
    on_text: self.parent.text = self.text


#@@@@@@@
<SimpleTextInput>:
    size_hint_y: None
    height: sp(40)
    hint_text: ""
    text: ""
    canvas.before:
        Color: 
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(8)]
    
    TunedTextInput:
        hint_text: self.parent.hint_text
        text: root.text


#@@@@@@@
<StudentsList>:
    cols: 1
    height: 0
    adaptive_height: True
    spacing: sp(10)


#@@@@@@@
<StudentItem>:
    cols: 2
    size_hint_y: None
    height: sp(40)
    text: ""

    SimpleTextInput:
        hint_text: "ФИО"
        text: root.text

    SubButton:
        icon: "minus-circle"
        on_release: root.parent.del_student(root)


#@@@@@@@
<SubButton@MDIconButton>:
    user_font_size: sp(24)
    theme_text_color: "Custom"
    text_color: (.4, .4, .4, 1)
    height: sp(40)
    width: sp(45)


#@@@@@@@
<ArrowButton@MDIconButton>:
    icon: "menu-right"
    theme_text_color: "Custom"
    text_color: (.4, .4, .4, 1)
    height: sp(40)


#@@@@@@@
<CB>:
    cols: 2
    text: ""
    standards: []
    adaptive_height: True
    spacing: sp(10)

    MDCheckbox:
        size_hint: None, None
        size: sp(22), sp(22)
        pos_hint: {"center_x": .5, "center_y": .5}
        on_active: self.get_root_window().children[-1].current_screen.update_checkboxes(root)
    
    MDLabel:
        text: root.text
        font_size: sp(20)


#@@@@@@@
<WriteAreaItem>:
    cols: 1
    spacing: sp(5)
    padding: [0, sp(5), 0, 0]
    adaptive_height: True
    height: 0
    canvas.before:
        Color: 
            rgba: 1, 1, 1, .5
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(40)*.2]

    MDLabel:
        text: "Some Name"
        padding: [sp(5), 0]
        font_size: sp(18)
        size_hint_y: None
        size: self.texture_size

    MDGridLayout:
        cols: 2
        spacing: sp(10) if len(self.children) > 1 else 0
        adaptive_height: True
        height: 0
        

#@@@@@@@
<ExerciseResultItem>:
    cols: 1
    adaptive_height: True
    spacing: 0

    MDLabel:
        font_size: sp(12)
        size_hint_y: None
        size: self.texture_size
        max_lines: 1
        shorten: True
        text: "None"
        padding: [sp(5), 0]

    SimpleTextInput:
        hint_text: "Результат"


#@@@@@@@
<Snackbar>:
    text: ""
    BoxLayout:
        id: box
        y: -sp(48)
        spacing: dp(5)
        padding: [sp(8), sp(15)]
        size_hint_y: None
        height: app.root_window.children[-1].current_screen.children[0].children[0].height
        canvas:
            Color:
                rgba: (1, 1, 1, .9)
            RoundedRectangle:
                pos: self.x + sp(8), self.y
                size: self.width - sp(16), self.height, 
                radius: [sp(10)]

        MDLabel:
            size_hint_y: None
            height: self.texture_size[1]
            text: root.text
            font_size: sp(18)
            halign: "center"
            pos_hint: {"center_y": .5}


#@@@@@@@
<FileManager>:
    bg_color: (1, 1, 1, 1)
    sub_color: (0, 0, 0, 1)
    path: ""
    cols: 1
    spacing: self.width // 20
    padding: [0, 0, 0, self.width // 20]
    canvas.before:
        Color:
            rgba: root.bg_color
        RoundedRectangle:
            pos: root.pos
            size: root.size
            radius: [sp(10)]

    MDGridLayout:
        cols: 2
        size_hint_y: None
        adaptive_height: True
        padding: [0, 0, root.width // 25, 0]
        spacing: root.width // 50
        canvas.before:
            Color:
                rgba: root.sub_color
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [sp(10), sp(10), 0, 0]

        FloatLayout:
            size_hint: None, None
            size: root.width*.2, root.width*.2
            MDIconButton:
                pos_hint: {"center_x": .5, "center_y": .5}
                icon: "arrow-left"
                user_font_size: root.width*.1
                on_release:  root.turn_back()

        MDLabel:
            size_hint_x: .7
            shorten: True
            font_size: root.width // 20
            text: root.path

    ScrollView:
        MDGridLayout:
            cols: 2
            size_hint: 1, None
            height: self.minimum_height
            spacing: self.width // 15


#@@@@@@@
<FileManagerItem>:
    cols: 1
    adaptive_height: True
    name: ""
    icon: "error"
    font_size: 10
    spacing: self.font_size // 10

    AnchorLayout:
        anchor_x: "center"
        size_hint_y: None
        height: root.font_size
        st: False
        canvas.before:
            Color:
                rgba: (1, 1, 1, .7) if self.st else (0, 0, 0, 0)
            RoundedRectangle:
                pos: self.x+self.width*.5-self.height*.5, self.y
                size: self.height, self.height
                radius: [self.height*.2]

        MDIconButton:
            user_font_size: root.font_size
            icon: root.icon

    AnchorLayout:
        anchor_x: "center"
        size_hint: .5, None
        height: root.font_size // 4
        
        MDLabel:
            size_hint_x: .8
            shorten: True
            halign: "center"
            font_size: root.font_size // 4
            text: root.name
#
# Custom Expansion Panel
#
<ExpsList>:
    cols: 1
    adaptive_height: True
    height: 0
    spacing: sp(10)


#@@@@@@@
<ExpPanel>:
    cols: 2
    adaptive_height: True


#@@@@@@@
<ExpPanelBox>:
    cols: 1
    adaptive_height: True
    canvas.before:
        Color:
            rgba: 0, 0, 0, .15
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(8)]


#@@@@@@@
<ExpPanelItemsList>:
    cols: 1
    adaptive_height: True
    spacing: sp(10)
    padding: [0, sp(10), 0, 0] if self.height > 10 else [0, ]


#@@@@@@@
<ExpPanelAddButton>:
    anchor_x: "center"
    size_hint_y: None
    height: sp(40)

    SubButton:
        icon: "plus-circle"
        on_release: root.parent.children[1].add_item()
 

#@@@@@@@
<ExpRightButton>
    anchor_y: "top"
    size_hint_x: None
    width: self.children[0].width

    SubButton:
        icon: "minus-circle"
        height: sp(40)
        on_release: root.parent.parent.del_exp(self)


#@@@@@@@
<ExpPanelFirstItem>:
    placeholder: ""
    cols: 2
    size_hint_y: None
    height: sp(40)
    text: ""
    canvas.before:
        Color: 
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size 
            radius: [sp(8)] 
    
    TunedTextInput:
        hint_text: root.placeholder
            
    ExpArrow:


#@@@@@@@
<ExpPanelItem>:
    cols: 2
    size_hint_y: None
    height: sp(40)
    students: []
    standards: []

    ExpPanelInput:
        SubButton:
            icon: "pencil"
            height: sp(40)
            on_release: root.update(self.parent.children[1])
     
    SubButton:
        icon: "minus-circle"
        height: sp(40)
        on_release: root.parent.del_item(root)


#@@@@@@@
<ExpArrow@ArrowButton>:
    on_release: self.parent.parent.parent.change_state()


#@@@@@@@
<ExpPanelInput@GridLayout>:
    size_hint_y: None
    height: sp(40)
    cols: 2
    text: ""
    canvas.before:
        Color: 
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size 
            radius: [sp(8)] 
    
    TunedTextInput:
        hint_text: "Класс"


#
# Custom Drop Menu
#
<DropInput>:
    cols: 1
    adaptive_height: True
    text: ""

  
#@@@@@@@
<DropInputFirstItem>:
    cols: 2
    size_hint_y: None
    height: sp(40)
    text: ""
    canvas.before:
        Color: 
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size 
            radius: [sp(8)] 
    
    MDLabel:
        text: "Курс (класс)"
        theme_text_color: "Custom"
        text_color: (.4, .4, .4, 1) if self.text == "Курс (класс)" else (0, 0, 0, 1)
        padding: [sp(8), self.height//4-self.font_size//8]
        font_size: sp(20)
     
    DropArrow:


#@@@@@@@
<DropInputDropArea>:
    anchor_x: "right"
    size_hint_y: None
    height: sp(190)
    padding: [0, sp(7)]
    opacity: 0
    canvas.before:
        Color: 
            rgba: 0, 0, 0, .15
        RoundedRectangle:
            pos: self.x+self.width*.5, self.y
            size: self.width*.5, self.height
            radius: [0, sp(7), sp(7), sp(7)]

    DropInputScroll:

#@@@@@@@ 
<DropInputScroll>:
    cols: 1
    bar_width: sp(5)
    bar_color: (.4, .4, .4, 1)
    size_hint: None, None
    height: 0
    width: self.parent.width*.5 if self.parent else 0
    effect_cls: "ScrollEffect"

    DropInputItemsList:
    

#@@@@@@@
<DropInputItemsList@MDGridLayout>:
    cols: 1
    adaptive_height: True
    spacing: sp(10)


#@@@@@@@
<DropArrow@ArrowButton>:
    on_release: self.parent.parent.change_state()


#@@@@@@@
<DropListItem>:
    name: ""
    students: []
    group: ""
    size_hint_y: None
    height: sp(35)
    background_normal: ""
    background_color: (0, 0, 0, 0)
    canvas.before:
        Color: 
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(7)]
    
    MDLabel:
        size_hint: None, None
        size: root.size
        pos: root.pos
        padding: [sp(5), 0]
        font_size: sp(18)
        text: root.name

    
#
# Navs
# 
<Nav@BoxLayout>:
    orientation: "horizontal"
    size_hint_y: .08
    canvas.before:
        Color: 
            rgba: 1, 1, 1, .6
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [sp(10)]


#@@@@@@@
<NavItem@MDIconButton>:
    pos_hint: {"center_x": .5, "center_y": .5}
    user_font_size: sp(32)


#@@@@@@@
<NavSub@FloatLayout>:
    name: ""
    canvas.before:
        Color: 
            rgba: (1, 1, 1, .6) if self.parent.parent.parent.area == self.name else (0, 0, 0, 0)

        Ellipse:
            pos: self.center_x-self.height*.7//2, self.center_y-self.height*.7//2
            size: self.height*.7, self.height*.7


#@@@@@@@
<NavSubEmpty@FloatLayout>:
#
# Main Screen
#
<MainScreen>:
    ScreenBox:
        AreaScroll:
            MainArea:

        Nav:
            FloatLayout:
                NavItem: 
                    name: "Create"
                    icon: "plus-circle"
                    on_release: root.redirect(self)

            FloatLayout:
                NavItem: 
                    name: "OpenFile"
                    icon: "folder-outline"
                    on_release: root.redirect(self)

            FloatLayout:
                NavItem:
                    name: "Settings" 
                    # !!!WARNING!!!                    
                    icon: "settings" if platform == "android" else "cog" # remove on prodaction
                    on_release: root.redirect(self)        
#
# Create Screen
#
<CreateScreen>:
    area: "SettingsArea"

    ScreenBox:
        spacing: 0
        AreaScroll:  

        # Sub Nav
        BoxLayout:
            size_hint_y: None
            height: sp(15)
            NavSub:
                name: "SettingsArea"

            NavSub:
                name: "WriteArea"

            NavSubEmpty:

            NavSubEmpty:

        Nav:
            FloatLayout:
                NavItem: 
                    name: "SettingsArea"
                    icon: "wrench"
                    on_release: root.change_area(self)
                
            FloatLayout:
                NavItem:
                    name: "WriteArea"
                    icon: "view-list" 
                    on_release: root.change_area(self)

            FloatLayout:
                NavItem:
                    icon: "content-save" 
                    on_release: root.save_file(self)
        
            FloatLayout:
                NavItem:
                    name: "Main"
                    icon: "home" 
                    on_release: root.redirect(self)
#
# Create Screen
#
<UpdateScreen>:
    area: "WriteArea"

    ScreenBox:
        spacing: 0
        AreaScroll:  

        # Sub Nav
        BoxLayout:
            size_hint_y: None
            height: sp(15)
            NavSub:
                name: "SettingsArea"

            NavSub:
                name: "WriteArea"

            NavSubEmpty:

            NavSubEmpty:

        Nav:
            FloatLayout:
                NavItem: 
                    name: "SettingsArea"
                    icon: "wrench"
                    on_release: root.change_area(self)
                
            FloatLayout:
                NavItem:
                    name: "WriteArea"
                    icon: "view-list" 
                    on_release: root.change_area(self)

            FloatLayout:
                NavItem:
                    icon: "content-save" 
                    on_release: root.save_file(self)
        
            FloatLayout:
                NavItem:
                    name: "Main"
                    icon: "home" 
                    on_release: root.redirect(self)
#
# Settings Screen
#                   
<SettingsScreen>:
    ScreenBox:
        AreaScroll:
            SettingsArea:
                          
        Nav:
            FloatLayout:
                NavItem: 
                    name: "Main"
                    icon: "content-save"
                    on_release: root.save_settings(self)

            FloatLayout:
                NavItem:
                    name: "Main" 
                    icon: "home" 
                    on_release: root.redirect(self) 
#
# Class Screen
# 
<ClassScreen>:
    students: []
    title: ""
    ScreenBox:
        AreaScroll:
            ClassArea:
                
        Nav:
            FloatLayout:
                NavItem: 
                    name: "Settings"
                    icon: "arrow-left-circle"
                    on_release:
                        root.update_students() 
                        root.redirect(self)
                        root.parent.update_settings_students(root.name, root.students)
#
# Exercise Screen
#                
<ExerciseScreen>:
    standards: []
    title: ""
    ScreenBox:
        AreaScroll:
            ExerciseArea:
                
        Nav:
            FloatLayout:
                NavItem: 
                    name: "Settings"
                    icon: "arrow-left-circle"
                    on_release:
                        root.update_standards()
                        root.redirect(self)
                        root.parent.update_settings_standards(root.title, root.standards)
#
# OpenFileScreen
# 
<OpenFileScreen>:
    ScreenBox:
        MDGridLayout:
            cols: 1

        Nav:
            FloatLayout:
                NavItem: 
                    name: "Update"
                    icon: "file-check"
                    on_release: root.redirect(self)

            FloatLayout:
                NavItem:
                    name: "Main" 
                    icon: "home" 
                    on_release: root.redirect(self)
#
# SaveFileScreen
#
<SaveFileScreen>:
    ScreenBox:
        MDGridLayout:
            cols: 1

        Nav:
            FloatLayout:
                NavItem:
                    name: "Update" if app.root_window.children[-1].current_screen.name == "Update" else "Create"
                    icon: "arrow-left-circle-outline" 
                    on_release: root.redirect(self)
            
            FloatLayout:
                NavItem: 
                    icon: "content-save"
                    on_release: root.save()
